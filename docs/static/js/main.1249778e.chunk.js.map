{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetcthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","handleInputChange","getGifs","category","a","fetch","encodeURI","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetcthGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,sBAAMC,SAdW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAIN,GAERA,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAmBS,OAErCR,EAAc,MAOlB,SAEI,uBACIS,KAAK,OACLC,MAASX,EACTY,SAAY,SAACT,IAxBC,SAACA,GAEvBF,EAAcE,EAAEU,OAAOF,OAuBXG,CAAkBX,S,+BC7BrBY,EAAO,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,4DACJ,mCACA,uCAFI,SAGEC,MAAM,GAAD,OADX,uCACW,cAAaC,UAAUH,GAAvB,6BAFX,qCADI,cAGbI,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAIFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAZtB,kBAkBZL,GAlBY,4CAAH,sDCDXQ,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,MAASC,GAAS,EAAZF,GAAY,EAATE,KAGlC,OACI,sBAAKI,UAAU,0CAAf,UACI,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,kCAAKA,EAAL,WCHCQ,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAOrB,ECRyB,SAACA,GAE1B,MAA0BjB,mBAAU,CAChCuB,KAAM,GACNc,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAf,GAGEa,EAAS,CACLhB,KAAMG,EACNW,SAAS,SAM1B,CAACpB,IAEGqB,EDduBI,CAAczB,GAAhCa,EAAZ,EAAOP,KAAYc,EAAnB,EAAmBA,QAOnB,OANA/B,QAAQC,IAAIuB,EAAOO,GAOf,qCACI,oCAAOpB,EAAP,OACCoB,EAAU,cAAgB,eAC3B,qBAAKJ,UAAW,YAAhB,SAGQH,EAAOL,KAAI,SAACC,GAAD,OAEP,aADA,CACC,EAAD,eAEQA,GADGA,EAAIC,aEUxBgB,EAlCM,WAGjB,MAAoC3C,mBAAS,CAAC,aAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAOA,OACI,qCACI,8CACI,cAAC,EAAD,CAAaA,cAAiBA,IAClC,uBAEA,6BAEQ6C,EAAWnB,KAAI,SAAAR,GAAQ,OAEvB,aADA,CACC,EAAD,CAEQA,SAAYA,GADLA,YCpBnC4B,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.1249778e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e)=>{\r\n        //console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(inputValue);\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats =>[ inputValue,...cats ]);\r\n            //setCategories(cats =>[ inputValue ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    //setinputValue();\r\n    \r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            \r\n            <input\r\n                type='text'\r\n                value = {inputValue}\r\n                onChange = {(e)=>{\r\n                    handleInputChange(e);\r\n                }}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\n\r\n    export const getGifs = async(category) => {\r\n        const apiKey = 'FtqrIG2J2XBxma0PDChCNFrN2a5AKTte';\r\n        const url    = 'https://api.giphy.com/v1/gifs/search'\r\n        const resp   = await fetch(`${url}?q=${encodeURI(category)}&limit=10&api_key=${ apiKey }`);\r\n        const { data } = await resp.json(); \r\n\r\n        //const { url } = data.images.original;\r\n        //return url;\r\n        const gifs = data.map(img =>{\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        });\r\n        //console.log(gifs);\r\n        //setImages(gifs);\r\n\r\n        return gifs;\r\n    }\r\n    ","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,id,url}) => {\r\n\r\n    //console.log(title,id,url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","//import React,{useEffect,useState} from 'react'\r\nimport { useFetcthGifs } from '../hooks/useFetcthGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    /*useEffect(() => {\r\n        getGifs(category)\r\n            .then(setImages);\r\n    }, [category]);*/\r\n\r\n    const {data:images,loading} = useFetcthGifs(category);\r\n    console.log(images,loading);\r\n\r\n    //const [images, setImages] = useState([]);\r\n\r\n    //getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3>  {category} </h3>\r\n            {loading ? 'Cargando...' : 'Data Cargada'}\r\n            <div className= \"card-grid\">\r\n                \r\n                {\r\n                    images.map((img) =>(\r\n                        //return <li key={ id }> {title} </li>\r\n                        <GifGridItem \r\n                            key = {img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetcthGifs = (category) => {\r\n    \r\n    const [state, setState] = useState ({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(img=>{\r\n\r\n                //setTimeout(() => {\r\n                    setState({\r\n                        data: img,\r\n                        loading: false\r\n                    });\r\n               // }, 3000);\r\n                \r\n\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    //const categories = ['Animales', 'Plantas', 'Minerales'];\r\n    const [categories, setCategories] = useState(['Animales']);\r\n\r\n    /*const handleAdd = ()=>{\r\n        console.log('vamos a agregar un elemento');\r\n        setCategories([...categories, 'Agua']);\r\n    }*/\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories= { setCategories }/>\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                    //return <li key={ category }> {category} </li>\r\n                    <GifGrid \r\n                            key = {category}\r\n                            category = {category}\r\n                        />\r\n                    ))\r\n                }\r\n           </ol>\r\n\r\n        </>\r\n    );\r\n        \r\n} \r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  \n    document.getElementById('root')\n);\n"],"sourceRoot":""}